# 正则表达式
> 正则表达式是匹配模式，要么匹配字符，要么匹配位置。

## 字符匹配
  - 两种匹配模式
  - 字符组(纵向)
    - 表示一个字符位，可以是摸个不确定的字符
    - eg:[abc],表示该字符可以是a、b、c中任意一个
    - 简写
      - \d就是[0-9]。表示是一位数字。记忆方式：其英文是digit（数字）。
      - \D就是[^0-9]。表示除数字外的任意字符。
      - \w就是[0-9a-zA-Z_]。表示数字、大小写字母和下划线。
      - \W是[^0-9a-zA-Z_]。非单词字符。
      - \s是[ \t\v\n\r\f]。表示空白符，
      - \S是[^ \t\v\n\r\f]。 非空白符。
      - .就是[^\n\r\u2028\u2029]。通配符，表示几乎任意字符。
  - 量词(横向)
    - 表示字符的长度不是固定的
    - eg: /ab{2,5}c/,第一个字符是“a”，接下来是2到5个字符“b”，最后是字符“c”
    - 简写:
      - {m,} 表示至少出现m次。
      - {m} 等价于{m,m}，表示出现m次。
      - ? 等价于{0,1}，表示出现或者不出现。记忆方式：问号的意思表示，有吗？
      - + 等价于{1,}，表示出现至少一次。记忆方式：加号是追加的意思，得先有一个，然后才考虑追加。
      - * 等价于{0,}，表示出现任意次，有可能不出现。记忆方式：看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。
  - 分支结构
    - 一个模式可以纵横向，而多选分支可支持多个子模式人选其一
    - eg:(p1|p2|p3),其中p1、p2和p3是子模式，用|（管道符）分隔，表示可选其中任何一个子模式
  - 贪婪vs惰性
    - 默认是贪婪模式
## 位置匹配
